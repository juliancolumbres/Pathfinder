{"ast":null,"code":"var _jsxFileName = \"/Users/jc123/Desktop/Pathfinder/my-app/src/components/Pathfind.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport './Pathfind.css';\nimport Node from './Node.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cols = 15;\nconst rows = 5;\n\nconst Pathfind = () => {\n  _s();\n\n  const [Grid, setGrid] = useState([]);\n  useEffect(() => {\n    initializeGrid();\n  }, []);\n\n  const initializeGrid = () => {\n    const grid = new Array(cols);\n\n    for (let i = 0; i < cols; i++) {\n      grid[i] = new Array(rows);\n    }\n\n    createSpot(grid);\n    setGrid(grid);\n  };\n\n  const createSpot = grid => {\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        grid[i][j] = new Spot(i, j);\n      }\n    }\n  };\n\n  function Spot(i, j) {\n    this.x = i;\n    this.y = j;\n    this.f = 0;\n    this.g = 0;\n    this.h = 0;\n  }\n\n  const gridWithNode = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Grid.map((row, rowIndex) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rowWrapper\",\n        children: row.map((col, colIndex) => {\n          return /*#__PURE__*/_jsxDEV(Node, {}, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 36\n          }, this);\n        })\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n\n  console.log(Grid);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pathfind Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), gridWithNode]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pathfind, \"LLLgB117dTzJtmrdVZ6pOaCL21I=\");\n\n_c = Pathfind;\nexport default Pathfind;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pathfind\");","map":{"version":3,"sources":["/Users/jc123/Desktop/Pathfinder/my-app/src/components/Pathfind.js"],"names":["React","useState","useEffect","Node","cols","rows","Pathfind","Grid","setGrid","initializeGrid","grid","Array","i","createSpot","j","Spot","x","y","f","g","h","gridWithNode","map","row","rowIndex","col","colIndex","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,IAAI,GAAG,CAAb;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,cAAc;AACjB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,cAAc,GAAG,MAAM;AACzB,UAAMC,IAAI,GAAG,IAAIC,KAAJ,CAAUP,IAAV,CAAb;;AACA,SAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAApB,EAA0BQ,CAAC,EAA3B,EAA+B;AAC3BF,MAAAA,IAAI,CAACE,CAAD,CAAJ,GAAU,IAAID,KAAJ,CAAUN,IAAV,CAAV;AACH;;AAEDQ,IAAAA,UAAU,CAACH,IAAD,CAAV;AAEAF,IAAAA,OAAO,CAACE,IAAD,CAAP;AACH,GATD;;AAWA,QAAMG,UAAU,GAAIH,IAAD,IAAU;AACzB,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,IAApB,EAA0BO,CAAC,EAA3B,EAA+B;AAC3B,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,IAApB,EAA0BU,CAAC,EAA3B,EAA+B;AAC3BJ,QAAAA,IAAI,CAACE,CAAD,CAAJ,CAAQE,CAAR,IAAa,IAAIC,IAAJ,CAASH,CAAT,EAAWE,CAAX,CAAb;AACH;AACJ;AACJ,GAND;;AAQA,WAASC,IAAT,CAAcH,CAAd,EAAgBE,CAAhB,EAAmB;AACf,SAAKE,CAAL,GAASJ,CAAT;AACA,SAAKK,CAAL,GAASH,CAAT;AACA,SAAKI,CAAL,GAAS,CAAT;AACA,SAAKC,CAAL,GAAS,CAAT;AACA,SAAKC,CAAL,GAAS,CAAT;AACH;;AAED,QAAMC,YAAY,gBACd;AAAA,cACKd,IAAI,CAACe,GAAL,CAAS,CAACC,GAAD,EAAMC,QAAN,KAAmB;AACzB,0BACI;AAAoB,QAAA,SAAS,EAAC,YAA9B;AAAA,kBACKD,GAAG,CAACD,GAAJ,CAAQ,CAACG,GAAD,EAAMC,QAAN,KAAmB;AACxB,8BAAO,QAAC,IAAD,MAAWA,QAAX;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFA;AADL,SAAUF,QAAV;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;;AAcAG,EAAAA,OAAO,CAACC,GAAR,CAAYrB,IAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKc,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAzDD;;GAAMf,Q;;KAAAA,Q;AA2DN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from 'react';\nimport './Pathfind.css';\nimport Node from './Node.js';\n\nconst cols = 15;\nconst rows = 5;\n\n\nconst Pathfind = () => {\n\n    const [Grid, setGrid] = useState([]);\n\n    useEffect(() => {\n        initializeGrid();\n    }, [] );\n\n    const initializeGrid = () => {\n        const grid = new Array(cols);\n        for (let i = 0; i < cols; i++) {\n            grid[i] = new Array(rows);\n        }\n\n        createSpot(grid);\n\n        setGrid(grid);\n    }\n\n    const createSpot = (grid) => {\n        for (let i = 0; i < rows; i++) {\n            for (let j = 0; j < cols; j++) {\n                grid[i][j] = new Spot(i,j);\n            }\n        }\n    }\n\n    function Spot(i,j) {\n        this.x = i;\n        this.y = j;\n        this.f = 0;\n        this.g = 0;\n        this.h = 0;\n    }\n\n    const gridWithNode = (\n        <div> \n            {Grid.map((row, rowIndex) => {\n                return (\n                    <div key={rowIndex} className=\"rowWrapper\">\n                        {row.map((col, colIndex) => {\n                            return <Node key={colIndex} />;\n                        })}\n                    </div>\n                );\n            })}\n        </div>\n    );\n\n    console.log(Grid);\n\n    return (\n        <div className=\"Wrapper\">\n            <h1>Pathfind Component</h1>\n            {gridWithNode}\n        </div>\n    );\n};\n\nexport default Pathfind;"]},"metadata":{},"sourceType":"module"}